Grammar

    0 $accept: program $end

    1 program: pgm

    2 pgm: /* empty */
    3    | proc pgm
    4    | struct pgm

    5 if: IF BL bool_expr

    6 if_stmt: if BR THEN stmt ELSE stmt
    7        | if BR THEN stmt

    8 for: FOR

    9 stmt: for BL assignment STOP bool_expr STOP statement BR stmt
   10     | if_stmt
   11     | PRINTF BL expr BR STOP
   12     | RETURN expr STOP
   13     | declaration STOP
   14     | assignment STOP
   15     | CBL statement_seq CBR
   16     | proc_call STOP
   17     | ERROR

   18 statement: /* empty */
   19          | PRINTF BL STR BR
   20          | assignment
   21          | ERROR

   22 assignment: l_exp EQ expr
   23           | l_exp EQ proc_call

   24 proc_call: proc_id BL expr_list BR

   25 proc_id: IDENTIFIER

   26 proc: proc_line BR CBL statement_seq CBR

   27 proc_line: proc_declaration BL declist

   28 proc_declaration: proc_dec
   29                 | VOID IDENTIFIER

   30 proc_dec: type IDENTIFIER

   31 struct_declaration: STRUCT IDENTIFIER

   32 struct: struct_declaration CBL declist CBR

   33 declaration: type IDENTIFIER

   34 expr_list: /* empty */
   35          | expr
   36          | ex COMMA expr_list

   37 ex: expr

   38 declist: /* empty */
   39        | declaration
   40        | declaration COMMA declist

   41 id: IDENTIFIER

   42 l_exp: id

   43 $@1: /* empty */

   44 l_exp: id DOT $@1 l_exp

   45 statement_seq: /* empty */
   46              | stmt statement_seq

   47 type: INT
   48     | BOOL
   49     | STRTYPE
   50     | IDENTIFIER

   51 expr: IDENTIFIER
   52     | bool_expr
   53     | int_expr
   54     | str_expr

   55 int_expr: NUM
   56         | MIN NUM
   57         | NUM int_op NUM
   58         | BL int_expr BR

   59 bool_expr: BOOLTYPE
   60          | NOT bool_expr
   61          | NUM bool_op NUM
   62          | BL bool_expr BR

   63 str_expr: STR
   64         | STR ADD str_expr
   65         | BL str_expr BR

   66 int_op: MIN
   67       | ADD
   68       | MUL
   69       | DIV
   70       | MOD

   71 bool_op: EQU
   72        | AND
   73        | OR
   74        | LESS
   75        | LEQ
   76        | GREQ
   77        | MORE
   78        | NEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 36 40
STRTYPE (259) 49
BOOL (260) 48
INT (261) 47
VOID (262) 29
RETURN (263) 12
FOR (264) 8
IF (265) 5
STRUCT (266) 31
PRINTF (267) 11 19
STR (268) 19 63 64
STOP (269) 9 11 12 13 14 16
AND (270) 72
OR (271) 73
NOT (272) 60
MOD (273) 70
EQ (274) 22 23
NEQ (275) 78
BL (276) 5 9 11 19 24 27 58 62 65
BR (277) 6 7 9 11 19 24 26 58 62 65
CBL (278) 15 26 32
CBR (279) 15 26 32
ERROR (280) 17 21
BOOLTYPE (281) 59
NUM (282) 55 56 57 61
IDENTIFIER (283) 25 29 30 31 33 41 50 51
DOT (284) 44
DIV (285) 69
MUL (286) 68
MIN (287) 56 66
ADD (288) 64 67
EQU (289) 71
MORE (290) 77
GREQ (291) 76
LEQ (292) 75
LESS (293) 74
ELSE (294) 6
THEN (295) 6 7


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
pgm (43)
    on left: 2 3 4, on right: 1 3 4
if (44)
    on left: 5, on right: 6 7
if_stmt (45)
    on left: 6 7, on right: 10
for (46)
    on left: 8, on right: 9
stmt (47)
    on left: 9 10 11 12 13 14 15 16 17, on right: 6 7 9 46
statement (48)
    on left: 18 19 20 21, on right: 9
assignment (49)
    on left: 22 23, on right: 9 14 20
proc_call (50)
    on left: 24, on right: 16 23
proc_id (51)
    on left: 25, on right: 24
proc (52)
    on left: 26, on right: 3
proc_line (53)
    on left: 27, on right: 26
proc_declaration (54)
    on left: 28 29, on right: 27
proc_dec (55)
    on left: 30, on right: 28
struct_declaration (56)
    on left: 31, on right: 32
struct (57)
    on left: 32, on right: 4
declaration (58)
    on left: 33, on right: 13 39 40
expr_list (59)
    on left: 34 35 36, on right: 24 36
ex (60)
    on left: 37, on right: 36
declist (61)
    on left: 38 39 40, on right: 27 32 40
id (62)
    on left: 41, on right: 42 44
l_exp (63)
    on left: 42 44, on right: 22 23 44
$@1 (64)
    on left: 43, on right: 44
statement_seq (65)
    on left: 45 46, on right: 15 26 46
type (66)
    on left: 47 48 49 50, on right: 30 33
expr (67)
    on left: 51 52 53 54, on right: 11 12 22 35 37
int_expr (68)
    on left: 55 56 57 58, on right: 53 58
bool_expr (69)
    on left: 59 60 61 62, on right: 5 9 52 60 62
str_expr (70)
    on left: 63 64 65, on right: 54 64 65
int_op (71)
    on left: 66 67 68 69 70, on right: 57
bool_op (72)
    on left: 71 72 73 74 75 76 77 78, on right: 61


state 0

    0 $accept: . program $end

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    STRUCT      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (pgm)

    program             go to state 7
    pgm                 go to state 8
    proc                go to state 9
    proc_line           go to state 10
    proc_declaration    go to state 11
    proc_dec            go to state 12
    struct_declaration  go to state 13
    struct              go to state 14
    type                go to state 15


state 1

   49 type: STRTYPE .

    $default  reduce using rule 49 (type)


state 2

   48 type: BOOL .

    $default  reduce using rule 48 (type)


state 3

   47 type: INT .

    $default  reduce using rule 47 (type)


state 4

   29 proc_declaration: VOID . IDENTIFIER

    IDENTIFIER  shift, and go to state 16


state 5

   31 struct_declaration: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 17


state 6

   50 type: IDENTIFIER .

    $default  reduce using rule 50 (type)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 18


state 8

    1 program: pgm .

    $default  reduce using rule 1 (program)


state 9

    3 pgm: proc . pgm

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    STRUCT      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (pgm)

    pgm                 go to state 19
    proc                go to state 9
    proc_line           go to state 10
    proc_declaration    go to state 11
    proc_dec            go to state 12
    struct_declaration  go to state 13
    struct              go to state 14
    type                go to state 15


state 10

   26 proc: proc_line . BR CBL statement_seq CBR

    BR  shift, and go to state 20


state 11

   27 proc_line: proc_declaration . BL declist

    BL  shift, and go to state 21


state 12

   28 proc_declaration: proc_dec .

    $default  reduce using rule 28 (proc_declaration)


state 13

   32 struct: struct_declaration . CBL declist CBR

    CBL  shift, and go to state 22


state 14

    4 pgm: struct . pgm

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    STRUCT      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (pgm)

    pgm                 go to state 23
    proc                go to state 9
    proc_line           go to state 10
    proc_declaration    go to state 11
    proc_dec            go to state 12
    struct_declaration  go to state 13
    struct              go to state 14
    type                go to state 15


state 15

   30 proc_dec: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


state 16

   29 proc_declaration: VOID IDENTIFIER .

    $default  reduce using rule 29 (proc_declaration)


state 17

   31 struct_declaration: STRUCT IDENTIFIER .

    $default  reduce using rule 31 (struct_declaration)


state 18

    0 $accept: program $end .

    $default  accept


state 19

    3 pgm: proc pgm .

    $default  reduce using rule 3 (pgm)


state 20

   26 proc: proc_line BR . CBL statement_seq CBR

    CBL  shift, and go to state 25


state 21

   27 proc_line: proc_declaration BL . declist

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 38 (declist)

    declaration  go to state 26
    declist      go to state 27
    type         go to state 28


state 22

   32 struct: struct_declaration CBL . declist CBR

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 38 (declist)

    declaration  go to state 26
    declist      go to state 29
    type         go to state 28


state 23

    4 pgm: struct pgm .

    $default  reduce using rule 4 (pgm)


state 24

   30 proc_dec: type IDENTIFIER .

    $default  reduce using rule 30 (proc_dec)


state 25

   26 proc: proc_line BR CBL . statement_seq CBR

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 45 (statement_seq)

    if             go to state 37
    if_stmt        go to state 38
    for            go to state 39
    stmt           go to state 40
    assignment     go to state 41
    proc_call      go to state 42
    proc_id        go to state 43
    declaration    go to state 44
    id             go to state 45
    l_exp          go to state 46
    statement_seq  go to state 47
    type           go to state 28


state 26

   39 declist: declaration .
   40        | declaration . COMMA declist

    COMMA  shift, and go to state 48

    $default  reduce using rule 39 (declist)


state 27

   27 proc_line: proc_declaration BL declist .

    $default  reduce using rule 27 (proc_line)


state 28

   33 declaration: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


state 29

   32 struct: struct_declaration CBL declist . CBR

    CBR  shift, and go to state 50


state 30

   12 stmt: RETURN . expr STOP

    STR         shift, and go to state 51
    NOT         shift, and go to state 52
    BL          shift, and go to state 53
    BOOLTYPE    shift, and go to state 54
    NUM         shift, and go to state 55
    IDENTIFIER  shift, and go to state 56
    MIN         shift, and go to state 57

    expr       go to state 58
    int_expr   go to state 59
    bool_expr  go to state 60
    str_expr   go to state 61


state 31

    8 for: FOR .

    $default  reduce using rule 8 (for)


state 32

    5 if: IF . BL bool_expr

    BL  shift, and go to state 62


state 33

   11 stmt: PRINTF . BL expr BR STOP

    BL  shift, and go to state 63


state 34

   15 stmt: CBL . statement_seq CBR

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 45 (statement_seq)

    if             go to state 37
    if_stmt        go to state 38
    for            go to state 39
    stmt           go to state 40
    assignment     go to state 41
    proc_call      go to state 42
    proc_id        go to state 43
    declaration    go to state 44
    id             go to state 45
    l_exp          go to state 46
    statement_seq  go to state 64
    type           go to state 28


state 35

   17 stmt: ERROR .

    $default  reduce using rule 17 (stmt)


state 36

   25 proc_id: IDENTIFIER .
   41 id: IDENTIFIER .
   50 type: IDENTIFIER .

    BL          reduce using rule 25 (proc_id)
    IDENTIFIER  reduce using rule 50 (type)
    $default    reduce using rule 41 (id)


state 37

    6 if_stmt: if . BR THEN stmt ELSE stmt
    7        | if . BR THEN stmt

    BR  shift, and go to state 65


state 38

   10 stmt: if_stmt .

    $default  reduce using rule 10 (stmt)


state 39

    9 stmt: for . BL assignment STOP bool_expr STOP statement BR stmt

    BL  shift, and go to state 66


state 40

   46 statement_seq: stmt . statement_seq

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 45 (statement_seq)

    if             go to state 37
    if_stmt        go to state 38
    for            go to state 39
    stmt           go to state 40
    assignment     go to state 41
    proc_call      go to state 42
    proc_id        go to state 43
    declaration    go to state 44
    id             go to state 45
    l_exp          go to state 46
    statement_seq  go to state 67
    type           go to state 28


state 41

   14 stmt: assignment . STOP

    STOP  shift, and go to state 68


state 42

   16 stmt: proc_call . STOP

    STOP  shift, and go to state 69


state 43

   24 proc_call: proc_id . BL expr_list BR

    BL  shift, and go to state 70


state 44

   13 stmt: declaration . STOP

    STOP  shift, and go to state 71


state 45

   42 l_exp: id .
   44      | id . DOT $@1 l_exp

    DOT  shift, and go to state 72

    $default  reduce using rule 42 (l_exp)


state 46

   22 assignment: l_exp . EQ expr
   23           | l_exp . EQ proc_call

    EQ  shift, and go to state 73


state 47

   26 proc: proc_line BR CBL statement_seq . CBR

    CBR  shift, and go to state 74


state 48

   40 declist: declaration COMMA . declist

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 38 (declist)

    declaration  go to state 26
    declist      go to state 75
    type         go to state 28


state 49

   33 declaration: type IDENTIFIER .

    $default  reduce using rule 33 (declaration)


state 50

   32 struct: struct_declaration CBL declist CBR .

    $default  reduce using rule 32 (struct)


state 51

   63 str_expr: STR .
   64         | STR . ADD str_expr

    ADD  shift, and go to state 76

    $default  reduce using rule 63 (str_expr)


state 52

   60 bool_expr: NOT . bool_expr

    NOT       shift, and go to state 52
    BL        shift, and go to state 77
    BOOLTYPE  shift, and go to state 54
    NUM       shift, and go to state 78

    bool_expr  go to state 79


state 53

   58 int_expr: BL . int_expr BR
   62 bool_expr: BL . bool_expr BR
   65 str_expr: BL . str_expr BR

    STR       shift, and go to state 51
    NOT       shift, and go to state 52
    BL        shift, and go to state 53
    BOOLTYPE  shift, and go to state 54
    NUM       shift, and go to state 55
    MIN       shift, and go to state 57

    int_expr   go to state 80
    bool_expr  go to state 81
    str_expr   go to state 82


state 54

   59 bool_expr: BOOLTYPE .

    $default  reduce using rule 59 (bool_expr)


state 55

   55 int_expr: NUM .
   57         | NUM . int_op NUM
   61 bool_expr: NUM . bool_op NUM

    AND   shift, and go to state 83
    OR    shift, and go to state 84
    MOD   shift, and go to state 85
    NEQ   shift, and go to state 86
    DIV   shift, and go to state 87
    MUL   shift, and go to state 88
    MIN   shift, and go to state 89
    ADD   shift, and go to state 90
    EQU   shift, and go to state 91
    MORE  shift, and go to state 92
    GREQ  shift, and go to state 93
    LEQ   shift, and go to state 94
    LESS  shift, and go to state 95

    $default  reduce using rule 55 (int_expr)

    int_op   go to state 96
    bool_op  go to state 97


state 56

   51 expr: IDENTIFIER .

    $default  reduce using rule 51 (expr)


state 57

   56 int_expr: MIN . NUM

    NUM  shift, and go to state 98


state 58

   12 stmt: RETURN expr . STOP

    STOP  shift, and go to state 99


state 59

   53 expr: int_expr .

    $default  reduce using rule 53 (expr)


state 60

   52 expr: bool_expr .

    $default  reduce using rule 52 (expr)


state 61

   54 expr: str_expr .

    $default  reduce using rule 54 (expr)


state 62

    5 if: IF BL . bool_expr

    NOT       shift, and go to state 52
    BL        shift, and go to state 77
    BOOLTYPE  shift, and go to state 54
    NUM       shift, and go to state 78

    bool_expr  go to state 100


state 63

   11 stmt: PRINTF BL . expr BR STOP

    STR         shift, and go to state 51
    NOT         shift, and go to state 52
    BL          shift, and go to state 53
    BOOLTYPE    shift, and go to state 54
    NUM         shift, and go to state 55
    IDENTIFIER  shift, and go to state 56
    MIN         shift, and go to state 57

    expr       go to state 101
    int_expr   go to state 59
    bool_expr  go to state 60
    str_expr   go to state 61


state 64

   15 stmt: CBL statement_seq . CBR

    CBR  shift, and go to state 102


state 65

    6 if_stmt: if BR . THEN stmt ELSE stmt
    7        | if BR . THEN stmt

    THEN  shift, and go to state 103


state 66

    9 stmt: for BL . assignment STOP bool_expr STOP statement BR stmt

    IDENTIFIER  shift, and go to state 104

    assignment  go to state 105
    id          go to state 45
    l_exp       go to state 46


state 67

   46 statement_seq: stmt statement_seq .

    $default  reduce using rule 46 (statement_seq)


state 68

   14 stmt: assignment STOP .

    $default  reduce using rule 14 (stmt)


state 69

   16 stmt: proc_call STOP .

    $default  reduce using rule 16 (stmt)


state 70

   24 proc_call: proc_id BL . expr_list BR

    STR         shift, and go to state 51
    NOT         shift, and go to state 52
    BL          shift, and go to state 53
    BOOLTYPE    shift, and go to state 54
    NUM         shift, and go to state 55
    IDENTIFIER  shift, and go to state 56
    MIN         shift, and go to state 57

    $default  reduce using rule 34 (expr_list)

    expr_list  go to state 106
    ex         go to state 107
    expr       go to state 108
    int_expr   go to state 59
    bool_expr  go to state 60
    str_expr   go to state 61


state 71

   13 stmt: declaration STOP .

    $default  reduce using rule 13 (stmt)


state 72

   44 l_exp: id DOT . $@1 l_exp

    $default  reduce using rule 43 ($@1)

    $@1  go to state 109


state 73

   22 assignment: l_exp EQ . expr
   23           | l_exp EQ . proc_call

    STR         shift, and go to state 51
    NOT         shift, and go to state 52
    BL          shift, and go to state 53
    BOOLTYPE    shift, and go to state 54
    NUM         shift, and go to state 55
    IDENTIFIER  shift, and go to state 110
    MIN         shift, and go to state 57

    proc_call  go to state 111
    proc_id    go to state 43
    expr       go to state 112
    int_expr   go to state 59
    bool_expr  go to state 60
    str_expr   go to state 61


state 74

   26 proc: proc_line BR CBL statement_seq CBR .

    $default  reduce using rule 26 (proc)


state 75

   40 declist: declaration COMMA declist .

    $default  reduce using rule 40 (declist)


state 76

   64 str_expr: STR ADD . str_expr

    STR  shift, and go to state 51
    BL   shift, and go to state 113

    str_expr  go to state 114


state 77

   62 bool_expr: BL . bool_expr BR

    NOT       shift, and go to state 52
    BL        shift, and go to state 77
    BOOLTYPE  shift, and go to state 54
    NUM       shift, and go to state 78

    bool_expr  go to state 81


state 78

   61 bool_expr: NUM . bool_op NUM

    AND   shift, and go to state 83
    OR    shift, and go to state 84
    NEQ   shift, and go to state 86
    EQU   shift, and go to state 91
    MORE  shift, and go to state 92
    GREQ  shift, and go to state 93
    LEQ   shift, and go to state 94
    LESS  shift, and go to state 95

    bool_op  go to state 97


state 79

   60 bool_expr: NOT bool_expr .

    $default  reduce using rule 60 (bool_expr)


state 80

   58 int_expr: BL int_expr . BR

    BR  shift, and go to state 115


state 81

   62 bool_expr: BL bool_expr . BR

    BR  shift, and go to state 116


state 82

   65 str_expr: BL str_expr . BR

    BR  shift, and go to state 117


state 83

   72 bool_op: AND .

    $default  reduce using rule 72 (bool_op)


state 84

   73 bool_op: OR .

    $default  reduce using rule 73 (bool_op)


state 85

   70 int_op: MOD .

    $default  reduce using rule 70 (int_op)


state 86

   78 bool_op: NEQ .

    $default  reduce using rule 78 (bool_op)


state 87

   69 int_op: DIV .

    $default  reduce using rule 69 (int_op)


state 88

   68 int_op: MUL .

    $default  reduce using rule 68 (int_op)


state 89

   66 int_op: MIN .

    $default  reduce using rule 66 (int_op)


state 90

   67 int_op: ADD .

    $default  reduce using rule 67 (int_op)


state 91

   71 bool_op: EQU .

    $default  reduce using rule 71 (bool_op)


state 92

   77 bool_op: MORE .

    $default  reduce using rule 77 (bool_op)


state 93

   76 bool_op: GREQ .

    $default  reduce using rule 76 (bool_op)


state 94

   75 bool_op: LEQ .

    $default  reduce using rule 75 (bool_op)


state 95

   74 bool_op: LESS .

    $default  reduce using rule 74 (bool_op)


state 96

   57 int_expr: NUM int_op . NUM

    NUM  shift, and go to state 118


state 97

   61 bool_expr: NUM bool_op . NUM

    NUM  shift, and go to state 119


state 98

   56 int_expr: MIN NUM .

    $default  reduce using rule 56 (int_expr)


state 99

   12 stmt: RETURN expr STOP .

    $default  reduce using rule 12 (stmt)


state 100

    5 if: IF BL bool_expr .

    $default  reduce using rule 5 (if)


state 101

   11 stmt: PRINTF BL expr . BR STOP

    BR  shift, and go to state 120


state 102

   15 stmt: CBL statement_seq CBR .

    $default  reduce using rule 15 (stmt)


state 103

    6 if_stmt: if BR THEN . stmt ELSE stmt
    7        | if BR THEN . stmt

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    if           go to state 37
    if_stmt      go to state 38
    for          go to state 39
    stmt         go to state 121
    assignment   go to state 41
    proc_call    go to state 42
    proc_id      go to state 43
    declaration  go to state 44
    id           go to state 45
    l_exp        go to state 46
    type         go to state 28


state 104

   41 id: IDENTIFIER .

    $default  reduce using rule 41 (id)


state 105

    9 stmt: for BL assignment . STOP bool_expr STOP statement BR stmt

    STOP  shift, and go to state 122


state 106

   24 proc_call: proc_id BL expr_list . BR

    BR  shift, and go to state 123


state 107

   36 expr_list: ex . COMMA expr_list

    COMMA  shift, and go to state 124


state 108

   35 expr_list: expr .
   37 ex: expr .

    COMMA     reduce using rule 37 (ex)
    $default  reduce using rule 35 (expr_list)


state 109

   44 l_exp: id DOT $@1 . l_exp

    IDENTIFIER  shift, and go to state 104

    id     go to state 45
    l_exp  go to state 125


state 110

   25 proc_id: IDENTIFIER .
   51 expr: IDENTIFIER .

    BL        reduce using rule 25 (proc_id)
    $default  reduce using rule 51 (expr)


state 111

   23 assignment: l_exp EQ proc_call .

    $default  reduce using rule 23 (assignment)


state 112

   22 assignment: l_exp EQ expr .

    $default  reduce using rule 22 (assignment)


state 113

   65 str_expr: BL . str_expr BR

    STR  shift, and go to state 51
    BL   shift, and go to state 113

    str_expr  go to state 82


state 114

   64 str_expr: STR ADD str_expr .

    $default  reduce using rule 64 (str_expr)


state 115

   58 int_expr: BL int_expr BR .

    $default  reduce using rule 58 (int_expr)


state 116

   62 bool_expr: BL bool_expr BR .

    $default  reduce using rule 62 (bool_expr)


state 117

   65 str_expr: BL str_expr BR .

    $default  reduce using rule 65 (str_expr)


state 118

   57 int_expr: NUM int_op NUM .

    $default  reduce using rule 57 (int_expr)


state 119

   61 bool_expr: NUM bool_op NUM .

    $default  reduce using rule 61 (bool_expr)


state 120

   11 stmt: PRINTF BL expr BR . STOP

    STOP  shift, and go to state 126


state 121

    6 if_stmt: if BR THEN stmt . ELSE stmt
    7        | if BR THEN stmt .

    ELSE  shift, and go to state 127

    $default  reduce using rule 7 (if_stmt)


state 122

    9 stmt: for BL assignment STOP . bool_expr STOP statement BR stmt

    NOT       shift, and go to state 52
    BL        shift, and go to state 77
    BOOLTYPE  shift, and go to state 54
    NUM       shift, and go to state 78

    bool_expr  go to state 128


state 123

   24 proc_call: proc_id BL expr_list BR .

    $default  reduce using rule 24 (proc_call)


state 124

   36 expr_list: ex COMMA . expr_list

    STR         shift, and go to state 51
    NOT         shift, and go to state 52
    BL          shift, and go to state 53
    BOOLTYPE    shift, and go to state 54
    NUM         shift, and go to state 55
    IDENTIFIER  shift, and go to state 56
    MIN         shift, and go to state 57

    $default  reduce using rule 34 (expr_list)

    expr_list  go to state 129
    ex         go to state 107
    expr       go to state 108
    int_expr   go to state 59
    bool_expr  go to state 60
    str_expr   go to state 61


state 125

   44 l_exp: id DOT $@1 l_exp .

    $default  reduce using rule 44 (l_exp)


state 126

   11 stmt: PRINTF BL expr BR STOP .

    $default  reduce using rule 11 (stmt)


state 127

    6 if_stmt: if BR THEN stmt ELSE . stmt

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    if           go to state 37
    if_stmt      go to state 38
    for          go to state 39
    stmt         go to state 130
    assignment   go to state 41
    proc_call    go to state 42
    proc_id      go to state 43
    declaration  go to state 44
    id           go to state 45
    l_exp        go to state 46
    type         go to state 28


state 128

    9 stmt: for BL assignment STOP bool_expr . STOP statement BR stmt

    STOP  shift, and go to state 131


state 129

   36 expr_list: ex COMMA expr_list .

    $default  reduce using rule 36 (expr_list)


state 130

    6 if_stmt: if BR THEN stmt ELSE stmt .

    $default  reduce using rule 6 (if_stmt)


state 131

    9 stmt: for BL assignment STOP bool_expr STOP . statement BR stmt

    PRINTF      shift, and go to state 132
    ERROR       shift, and go to state 133
    IDENTIFIER  shift, and go to state 104

    $default  reduce using rule 18 (statement)

    statement   go to state 134
    assignment  go to state 135
    id          go to state 45
    l_exp       go to state 46


state 132

   19 statement: PRINTF . BL STR BR

    BL  shift, and go to state 136


state 133

   21 statement: ERROR .

    $default  reduce using rule 21 (statement)


state 134

    9 stmt: for BL assignment STOP bool_expr STOP statement . BR stmt

    BR  shift, and go to state 137


state 135

   20 statement: assignment .

    $default  reduce using rule 20 (statement)


state 136

   19 statement: PRINTF BL . STR BR

    STR  shift, and go to state 138


state 137

    9 stmt: for BL assignment STOP bool_expr STOP statement BR . stmt

    STRTYPE     shift, and go to state 1
    BOOL        shift, and go to state 2
    INT         shift, and go to state 3
    RETURN      shift, and go to state 30
    FOR         shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    CBL         shift, and go to state 34
    ERROR       shift, and go to state 35
    IDENTIFIER  shift, and go to state 36

    if           go to state 37
    if_stmt      go to state 38
    for          go to state 39
    stmt         go to state 139
    assignment   go to state 41
    proc_call    go to state 42
    proc_id      go to state 43
    declaration  go to state 44
    id           go to state 45
    l_exp        go to state 46
    type         go to state 28


state 138

   19 statement: PRINTF BL STR . BR

    BR  shift, and go to state 140


state 139

    9 stmt: for BL assignment STOP bool_expr STOP statement BR stmt .

    $default  reduce using rule 9 (stmt)


state 140

   19 statement: PRINTF BL STR BR .

    $default  reduce using rule 19 (statement)
